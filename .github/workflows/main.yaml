# This is a basic workflow to help you get started with Actions

name: Sample workflow to scan image and publish to Azure Container Registry

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events 
  push:
    branches: [
        master,
        feature/release-python3
      ]
  pull_request:
    branches: [
        master,
        feature/release-python3
    ]
jobs:
  asc_scan:
    # equal with agent build
    runs-on: ubuntu-latest 
    env:
      ACR_REPO_NAME: vti-test
      ACR_SERVER: docker.io
    steps:
      - name: Checkout sample Dockerfile
        uses: actions/checkout@v3.0.0
        # with:
        #   ref: 'main'
      - name: Build a sample Docker image with Firefox
        run: |
          docker build -t ${{ env.ACR_SERVER }}/${{ env.ACR_REPO_NAME }}:${{ github.sha }} --file appbuild.dockerfile .


      # - name: Scan Docker image using Azure Container Scan action
      #   uses: Azure/container-scan@v0
      #   id: container-scan
      #   continue-on-error: true
      #   with:
      #     image-name: ${{ env.ACR_SERVER }}/${{ env.ACR_REPO_NAME }}:${{ github.sha }}
      #     # run-quality-checks provides CIS benchmark assessment
      #     run-quality-checks: true
      # - name: Login to Azure Container Registry
      #   uses: Azure/docker-login@v1
      #   with:
      #     login-server: quyennvsecacr.azurecr.io
      #     username: ${{ secrets.ACR_USERNAME }}
      #     password: ${{ secrets.ACR_PASSWORD }}
      # - name: Push scanned image to ${{ env.ACR_REPO_NAME }}
      #   run: |
      #     docker push ${{ env.ACR_SERVER }}/${{ env.ACR_REPO_NAME }}:${{ github.sha }}
      # - name: Post result status to Azure Security Center
      #   uses: Azure/publish-security-assessments@v0
      #   with:
      #     artifact-type: containerImage
      #     scan-provider: trivy
      #     connection-string: ${{ secrets.ASC_NAME }}
      #     subscription-token: ${{ secrets.ASC_AUTH_TOKEN }}
      #     # Do not modify ${{ steps.container-scan.outputs.scan-report-path }} as it uses this path by default in Version 0.1
      #     scan-results-path: ${{ steps.container-scan.outputs.scan-report-path }}